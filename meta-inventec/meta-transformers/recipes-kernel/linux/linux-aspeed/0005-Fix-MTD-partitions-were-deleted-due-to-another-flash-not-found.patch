From 514faeab339bc6208d88b2ba1df38b10af120214 Mon Sep 17 00:00:00 2001
From: anonymous <anonymous@inventec.com>
Date: Tue, 29 Sep 2020 14:14:05 -0400
Subject: [PATCH] Subject: [Patch][kernel] Fix MTD partitions were deleted due
 to another flash not found

Sympotom:
    We set dual flash in DTS, the aspeed-smc driver will detect them.
    If any of them cannot be detected, the driver will delete the registered one.
Solution:
    If one of the flashes can be detected but another failed then treat it successful.
---
 drivers/mtd/spi-nor/controllers/aspeed-smc.c | 35 ++++++++++++++++++++++++----
 1 file changed, 30 insertions(+), 5 deletions(-)

diff --git a/drivers/mtd/spi-nor/controllers/aspeed-smc.c b/drivers/mtd/spi-nor/controllers/aspeed-smc.c
index a591ce1..e83f389 100644
--- a/drivers/mtd/spi-nor/controllers/aspeed-smc.c
+++ b/drivers/mtd/spi-nor/controllers/aspeed-smc.c
@@ -1021,6 +1021,8 @@ static const uint32_t aspeed_smc_hclk_divs[] = {
 	0xe, /* HCLK/3 */
 	0x6, /* HCLK/4 */
 	0xd, /* HCLK/5 */
+	0x5, /* HCLK/6 */
+	0xc, /* HCLK/7 */
 };
 #define ASPEED_SMC_HCLK_DIV(i) \
 	(aspeed_smc_hclk_divs[(i) - 1] << CONTROL_CLOCK_FREQ_SEL_SHIFT)
@@ -1101,8 +1103,10 @@ static int aspeed_smc_optimize_read(struct aspeed_smc_chip *chip,
 		writel(tv, chip->ctl);
 		dev_dbg(chip->nor.dev, "Trying HCLK/%d [%08x] ...", i, tv);
 		rc = info->calibrate(chip, i, golden_buf, test_buf);
-		if (rc == 0)
+		if (rc == 0){
 			best_div = i;
+			printk(KERN_WARNING " freq = %d \n", freq);
+		}
 	}
 	kfree(test_buf);
 
@@ -1112,6 +1116,7 @@ static int aspeed_smc_optimize_read(struct aspeed_smc_chip *chip,
 	else {
 		dev_dbg(chip->nor.dev, "Found good read timings at HCLK/%d",
 			best_div);
+		printk(KERN_WARNING " best_div = %d \n", best_div);
 		chip->ctl_val[smc_read] |= ASPEED_SMC_HCLK_DIV(best_div);
 	}
 
@@ -1248,6 +1253,7 @@ static int aspeed_smc_setup_flash(struct aspeed_smc_controller *controller,
 	struct device_node *child;
 	unsigned int cs;
 	int ret = -ENODEV;
+	unsigned int n;
 
 	for_each_available_child_of_node(np, child) {
 		struct aspeed_smc_chip *chip;
@@ -1313,9 +1319,10 @@ static int aspeed_smc_setup_flash(struct aspeed_smc_controller *controller,
 		 * by of property.
 		 */
 		ret = spi_nor_scan(nor, NULL, &hwcaps);
-		if (ret)
-			break;
-
+		if (ret) {
+			//break;
+			continue; // find next node
+		}
 		ret = aspeed_smc_chip_setup_finish(chip);
 		if (ret)
 			break;
@@ -1326,13 +1333,31 @@ static int aspeed_smc_setup_flash(struct aspeed_smc_controller *controller,
 
 		controller->chips[cs] = chip;
 	}
-
+	/* Enable to mount MTD when only one flash exists in dual flash situation, iec+++ */
+	/*
 	if (ret) {
 		of_node_put(child);
 		aspeed_smc_unregister(controller);
 	}
 
 	return ret;
+	*/
+
+	/* Were any children registered? */
+	for (n = 0; n < info->nce; n++){
+		if (controller->chips[n]){
+			break;
+		}
+	}
+
+	if (n == info->nce){
+		printk("Setup flash failed");
+		aspeed_smc_unregister(controller);
+		return -ENODEV;
+	}
+
+	return 0;
+	/* Enable to mount MTD when only one flash exists in dual flash situation, iec--- */
 }
 
 static int aspeed_smc_probe(struct platform_device *pdev)
-- 
2.7.4

