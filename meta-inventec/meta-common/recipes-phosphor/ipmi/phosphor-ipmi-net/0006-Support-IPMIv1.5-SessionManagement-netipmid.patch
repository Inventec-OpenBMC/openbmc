From be23e71b344cbc8669102eaa50cd6665de9b910c Mon Sep 17 00:00:00 2001
From: cwsun <sun.cwsun@inventec.com>
Date: Fri, 20 Aug 2021 21:07:18 +0800
Subject: [PATCH] Support IPMI v1.5 Session Management

    Symptom/Reason :
        - The OpenBMC does not support IPMI v1.5 RMCP type Session Management

    Root Cause:
        - The OpenBMC does not support IPMI v1.5 RMCP type Session Management

    Solution/Change:
        [phosphor-dbus-interfaces]
            - add rmcpType into SessionInfo.interface.yaml
              -- the rmcpType will indicate if the session is RMCP or RMCP+ type.

        [phosphor-ipmi-host]
            - support RMCP type session of "Get Session Info" command
              -- ipmiAppGetSessionInfo()
              -- getSessionDetails()

        [phosphor-ipmi-net]
            - When user assign into the system via netipmid and register a session.
              The registered session will be record its type of RMCP or RMCP+ and be kept
              in the dbus system.
            - enable per-message authentication

    Entry Test:
        - Open RMCP(-Ilan) and RMCP+(-Ilanplus) sessions with IPMI shell
          -- ipmitool -I lan -H myqemu -U root -P 0penBmc -p 2623 shell
          -- ipmitool -I lanplus -H myqemu -U root -P 0penBmc -p 2623 -C17 shell
          -- ipmitool -I lanplus -H myqemu -U root -P 0penBmc -p 2623 -C17 shell
          -- ipmitool -I lan -H myqemu -U root -P 0penBmc -p 2623

        - then view the session info
          session info all
          >
            session handle                : 13
            slot count                    : 15
            active sessions               : 4
            user id                       : 2
            privilege level               : ADMINISTRATOR
            session type                  : IPMIv1.5
            channel number                : 0x01

            session handle                : 3
            slot count                    : 15
            active sessions               : 4
            user id                       : 2
            privilege level               : ADMINISTRATOR
            session type                  : IPMIv1.5
            channel number                : 0x01

            session handle                : 1
            slot count                    : 15
            active sessions               : 4
            user id                       : 2
            privilege level               : ADMINISTRATOR
            session type                  : IPMIv2/RMCP+
            channel number                : 0x01

            session handle                : 14
            slot count                    : 15
            active sessions               : 4
            user id                       : 2
            privilege level               : ADMINISTRATOR
            session type                  : IPMIv2/RMCP+
            channel number                : 0x01

---
 command/channel_auth.cpp | 2 +-
 sessions_manager.cpp     | 4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/command/channel_auth.cpp b/command/channel_auth.cpp
index 451fb27..9a389e5 100644
--- a/command/channel_auth.cpp
+++ b/command/channel_auth.cpp
@@ -52,7 +52,7 @@ std::vector<uint8_t>
 
     response->reserved3 = 0;
     response->KGStatus = 0;       // KG is set to default
-    response->perMessageAuth = 1; // Per-message Authentication disabled
+    response->perMessageAuth = 0; // Per-message Authentication enable, bug492
     response->userAuth = 0;       // User Level Authentication is enabled
     uint8_t maxChUsers = 0;
     uint8_t enabledUsers = 0;
diff --git a/sessions_manager.cpp b/sessions_manager.cpp
index e1611b3..88579dd 100644
--- a/sessions_manager.cpp
+++ b/sessions_manager.cpp
@@ -150,6 +150,7 @@ std::shared_ptr<Session>
         session->sessionHandle(sessionHandle);
         session->channelNum(getInterfaceIndex());
         session->userID(ipmi::ipmiUserGetUserId(userName));
+        session->rmcpType(0);
         return session;
     }
 
@@ -245,7 +246,8 @@ std::shared_ptr<Session>
 
         sessionsMap.emplace(bmcSessionID, session);
         session->sessionHandle(sessionHandle);
-        
+        session->rmcpType(1);
+
         return session;
     }
 
