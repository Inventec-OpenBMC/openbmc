From aef3a103a9e32bf5fc40ccb448ac2d710bd36b5c Mon Sep 17 00:00:00 2001
From: "anonymous" <anonymous@inventec.com>
Date: Thu, 27 Aug 2020 21:54:09 -0400
Subject: [PATCH] Patched to check Multi Record Area first record header and
 removed write FRU IPMI command

Patched to check Multi Record Area first record header and removed write FRU IPMI command
- Multi Record area header is different the other areas.
- Removed not used IPMI write FRU command.
---
 strgfnhandler.cpp |  9 +++++----
 writefrudata.cpp  | 47 ++++++++++++++++++++++++++++++++++++++++-------
 2 files changed, 45 insertions(+), 11 deletions(-)

diff --git a/strgfnhandler.cpp b/strgfnhandler.cpp
index 9ba2ad3..bfe31e2 100644
--- a/strgfnhandler.cpp
+++ b/strgfnhandler.cpp
@@ -113,9 +113,10 @@ ipmi_ret_t ipmiStorageWriteFruData(ipmi_netfn_t netfn, ipmi_cmd_t cmd,
 //-------------------------------------------------------
 void register_netfn_storage_write_fru()
 {
-    std::printf("Registering NetFn:[0x%X], Cmd:[0x%X]\n", NETFUN_STORAGE,
-                IPMI_CMD_WRITE_FRU_DATA);
 
-    ipmi_register_callback(NETFUN_STORAGE, IPMI_CMD_WRITE_FRU_DATA, NULL,
-                           ipmiStorageWriteFruData, SYSTEM_INTERFACE);
+//-    std::printf("Registering NetFn:[0x%X], Cmd:[0x%X]\n", NETFUN_STORAGE,
+//-                IPMI_CMD_WRITE_FRU_DATA);
+
+//-    ipmi_register_callback(NETFUN_STORAGE, IPMI_CMD_WRITE_FRU_DATA, NULL,
+//-                           ipmiStorageWriteFruData, SYSTEM_INTERFACE);
 }
diff --git a/writefrudata.cpp b/writefrudata.cpp
index 7507230..8145f45 100644
--- a/writefrudata.cpp
+++ b/writefrudata.cpp
@@ -361,6 +361,26 @@ ipmi_fru_area_type getFruAreaType(uint8_t areaOffset)
     return type;
 }
 
+int verifyFruMultiData(const uint8_t* data, const size_t len)
+{
+    uint8_t checksum = 0;
+    int rc = -1;
+
+    if ((data[2] == 0) || (len < 5)) // data length
+    {
+        log<level::ERR>("Multi Record data length is 0");
+        return rc;
+    }
+
+    checksum = calculateCRC(data, 4); // Check Record 1 header checksum
+    if (checksum != data[5])
+    {
+        log<level::ERR>("Multi Record 1 header checksum fail");
+        return rc;
+    }
+    return EXIT_SUCCESS;
+}
+
 /**
  * Validates the data for mandatory fields and CRC if selected.
  *
@@ -495,17 +515,30 @@ int ipmiPopulateFruAreas(uint8_t* fruData, const size_t dataLen,
             // contents beyond the first byte are not defined in the spec and
             // it may not end with a CRC byte.
             bool validateCrc = fruEntry != IPMI_FRU_INTERNAL_OFFSET;
-            rc = verifyFruData(areaData, areaLen, validateCrc);
-            if (rc < 0)
+
+            if (fruEntry == IPMI_FRU_MULTI_OFFSET)
             {
-                log<level::ERR>("Err validating FRU area",
-                                entry("OFFSET=%d", areaOffset));
-                return rc;
+                // Check Multi record area
+                rc = verifyFruMultiData(areaData, areaLen);
+                if (rc < 0)
+                {
+                    areaLen = 0;
+                }
             }
             else
             {
-                log<level::DEBUG>("Successfully verified area.",
-                                  entry("OFFSET=%d", areaOffset));
+                rc = verifyFruData(areaData, areaLen, validateCrc);
+                if (rc < 0)
+                {
+                    log<level::ERR>("Err validating FRU area",
+                                    entry("OFFSET=%d", areaOffset));
+                    return rc;
+                }
+                else
+                {
+                    log<level::DEBUG>("Successfully verified area.",
+                                      entry("OFFSET=%d", areaOffset));
+                }
             }
 
             // We already have a vector that is passed to us containing all
-- 
2.7.4

