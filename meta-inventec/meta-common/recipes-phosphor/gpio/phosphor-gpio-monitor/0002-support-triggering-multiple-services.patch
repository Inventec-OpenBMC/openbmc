From eedb02764fe4f2b0fad44c466ddda71e1e8d5114 Mon Sep 17 00:00:00 2001
From: link <link@inventec.com>
Date: Tue, 7 Dec 2021 01:50:14 +0000
Subject: [PATCH] support triggering multiple services

---
 gpioMon.cpp     | 16 +++++++++-------
 gpioMon.hpp     |  4 ++--
 gpioMonMain.cpp |  2 +-
 3 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/gpioMon.cpp b/gpioMon.cpp
index d669662..4d9841c 100644
--- a/gpioMon.cpp
+++ b/gpioMon.cpp
@@ -69,7 +69,7 @@ void GpioMonitor::gpioEventHandler()
     log<level::INFO>(logMessage.c_str());
 
     /* Execute the target if it is defined. */
-    std::string targetsToStart;
+    std::vector<std::string> targetsToStart;
     if (gpioLineEvent.event_type == GPIOD_LINE_EVENT_RISING_EDGE)
     {
        targetsToStart = target["RISING"];
@@ -82,13 +82,15 @@ void GpioMonitor::gpioEventHandler()
     //if (!target.empty())
     if (!targetsToStart.empty())
     {
-        auto bus = sdbusplus::bus::new_default();
+        for(unsigned int i = 0; i < targetsToStart.size(); i++){
+            auto bus = sdbusplus::bus::new_default();
         
-        auto method = bus.new_method_call(SYSTEMD_SERVICE, SYSTEMD_ROOT,
-                                                  SYSTEMD_INTERFACE, "StartUnit");
-        method.append(targetsToStart);
-        method.append("replace");
-        bus.call_noreply(method);
+            auto method = bus.new_method_call(SYSTEMD_SERVICE, SYSTEMD_ROOT,
+                                              SYSTEMD_INTERFACE, "StartUnit");
+            method.append(targetsToStart.at(i));
+            method.append("replace");
+            bus.call_noreply(method);
+	}
     }
     /* if not required to continue monitoring then return */
     if (!continueAfterEvent)
diff --git a/gpioMon.hpp b/gpioMon.hpp
index 7dc1a25..d632e0f 100644
--- a/gpioMon.hpp
+++ b/gpioMon.hpp
@@ -38,7 +38,7 @@ class GpioMonitor
      */
     GpioMonitor(gpiod_line* line, gpiod_line_request_config& config,
                 boost::asio::io_service& io, 
-                std::map<std::string, std::string> target,
+                std::map<std::string, std::vector<std::string>> target,
                 const std::string& lineMsg, bool continueRun) :
         gpioLine(line),
         gpioConfig(config), gpioEventDescriptor(io), target(target),
@@ -59,7 +59,7 @@ class GpioMonitor
 
     /** @brief Systemd unit to be started when the condition is met */
     //const std::string target;
-    std::map<std::string, std::string> target;
+    std::map<std::string, std::vector<std::string>> target;
     /** @brief GPIO line name message */
     std::string gpioLineMsg;
 
diff --git a/gpioMonMain.cpp b/gpioMonMain.cpp
index 7021b43..5dc6492 100644
--- a/gpioMonMain.cpp
+++ b/gpioMonMain.cpp
@@ -103,7 +103,7 @@ int main(int argc, char** argv)
 
         /* target to start */
         //std::string target;
-        std::map<std::string, std::string> target;
+        std::map<std::string, std::vector<std::string>> target;
 
         if (obj.find("LineName") == obj.end())
         {
-- 
2.17.1

