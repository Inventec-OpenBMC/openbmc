From 3e257999c0049e2ad634172c3526aed53fac971d Mon Sep 17 00:00:00 2001
From: "Lin.TommySC" <lin.tommysc@inventec.com>
Date: Wed, 8 Sep 2021 02:01:59 +0000
Subject: [PATCH] Implement ChannelAccess d-bus interface

Symptom/Reason :
    - Enable/Disable Lan Channel Access command failed

Root Cause:
    - xyz.openbmc_project.Channel.ChannelAccess d-bus interface was not available

Solution/Change:
    [phosphor-ipmi-config]
        - Modify channel_access.json to fit transformers's configuration
    [phosphor-ipmi-config]
        - Add error checking to prevent core dump
    [phosphor-network]
        - Implement xyz.openbmc_project.Channel.ChannelAccess d-bus interface

Entry Test:
    - Disable Lan Channel Access
        ipmitool lan set 1 access off
    - Enable Lan Channel Access
        ipmitool lan set 1 access on
---
 ethernet_interface.cpp | 19 +++++++++++++++++++
 ethernet_interface.hpp | 12 +++++++++++-
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/ethernet_interface.cpp b/ethernet_interface.cpp
index a4a43cd..4580b4f 100644
--- a/ethernet_interface.cpp
+++ b/ethernet_interface.cpp
@@ -45,6 +45,9 @@ constexpr auto PROPERTY_INTERFACE = "org.freedesktop.DBus.Properties";
 constexpr auto RESOLVED_SERVICE_PATH = "/org/freedesktop/resolve1/link/";
 constexpr auto METHOD_GET = "Get";
 constexpr auto USB_INTF_NAME = "usb0";
+const std::array<std::string, 6> privList = {
+    "priv-reserved", "priv-callback", "priv-user",
+    "priv-operator", "priv-admin",    "priv-oem"};
 
 struct EthernetIntfSocket
 {
@@ -1299,5 +1302,21 @@ std::string EthernetInterface::defaultGateway6(std::string gateway)
     manager.writeToConfigurationFile();
     return gw;
 }
+
+std::string EthernetInterface::maxPrivilege(std::string priv)
+{
+    auto iter = std::find(privList.begin(), privList.end(), priv);
+    if (iter == privList.end())
+    {
+        return ChannelAccessIntf::maxPrivilege();
+    }
+
+    if (ChannelAccessIntf::maxPrivilege() == priv)
+    {
+        return priv;
+    }
+
+    return ChannelAccessIntf::maxPrivilege(std::move(priv));
+}
 } // namespace network
 } // namespace phosphor
diff --git a/ethernet_interface.hpp b/ethernet_interface.hpp
index f6760ca..ea7b690 100644
--- a/ethernet_interface.hpp
+++ b/ethernet_interface.hpp
@@ -2,6 +2,7 @@
 
 #include "types.hpp"
 #include "util.hpp"
+#include "xyz/openbmc_project/Channel/ChannelAccess/server.hpp"
 #include "xyz/openbmc_project/Network/IP/Create/server.hpp"
 #include "xyz/openbmc_project/Network/Neighbor/CreateStatic/server.hpp"
 
@@ -33,7 +34,8 @@ using Ifaces = sdbusplus::server::object::object<
     sdbusplus::xyz::openbmc_project::Network::server::MACAddress,
     sdbusplus::xyz::openbmc_project::Network::IP::server::Create,
     sdbusplus::xyz::openbmc_project::Network::Neighbor::server::CreateStatic,
-    sdbusplus::xyz::openbmc_project::Collection::server::DeleteAll>;
+    sdbusplus::xyz::openbmc_project::Collection::server::DeleteAll,
+    sdbusplus::xyz::openbmc_project::Channel::server::ChannelAccess>;
 
 using IP = sdbusplus::xyz::openbmc_project::Network::server::IP;
 
@@ -41,6 +43,8 @@ using EthernetInterfaceIntf =
     sdbusplus::xyz::openbmc_project::Network::server::EthernetInterface;
 using MacAddressIntf =
     sdbusplus::xyz::openbmc_project::Network::server::MACAddress;
+using ChannelAccessIntf =
+    sdbusplus::xyz::openbmc_project::Channel::server::ChannelAccess;
 
 using ServerList = std::vector<std::string>;
 using ObjectPath = sdbusplus::message::object_path;
@@ -249,6 +253,11 @@ class EthernetInterface : public Ifaces
      */
     std::string defaultGateway6(std::string gateway) override;
 
+    /** @brief set maximum privilege level.
+     *  @param[in] value - maximum privilege level.
+     */
+    std::string maxPrivilege(std::string value) override;
+
     using EthernetInterfaceIntf::dhcpEnabled;
     using EthernetInterfaceIntf::interfaceName;
     using EthernetInterfaceIntf::linkUp;
@@ -256,6 +265,7 @@ class EthernetInterface : public Ifaces
     using EthernetInterfaceIntf::ipv6HopLimit;
     using EthernetInterfaceIntf::ipFamily;
     using MacAddressIntf::macAddress;
+    using ChannelAccessIntf::maxPrivilege;
 
     using EthernetInterfaceIntf::defaultGateway;
     using EthernetInterfaceIntf::defaultGateway6;
-- 
2.17.1

