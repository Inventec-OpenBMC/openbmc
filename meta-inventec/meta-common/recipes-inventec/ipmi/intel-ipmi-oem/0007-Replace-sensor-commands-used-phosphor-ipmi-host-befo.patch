From 2f73c09d16c58025edcf96213177f335198fc9b6 Mon Sep 17 00:00:00 2001
From: cynthia <wu.cynthia@inventec.com>
Date: Thu, 20 May 2021 21:20:09 +0800
Subject: [PATCH 07/10] - Replace sensor commands ( used phosphor-ipmi-host
 before ) - Modify fru functions to rescan periodically - Modify fru with
 limit size

[Symptom/Reason]
	1. The fru functions are related to sensor ( sdr list ), thus
	   we change to use sensor commands under intel-ipmi-oem as well
	2. If we change fru data without ipmitool, the change might be
	   missed when we don't rescan
	3. if the size of fru file we write is bigger than the one before,
	   last parts will be missing

[Root Cause]
	1. ipmitool will get fru size before we write, which will be the
	   smaller size of original file

[Solution/Changes]
	1.Remove the command outs of sensor related functions
	2.add rescan rules for fru cache
	3.set a fru size limit for all fru

[Entry Test]

- fru print
sysadmin@transformers:~# ipmitool fru print
FRU Device Description : Builtin FRU Device (ID 0)
 Chassis Type          : Rack Mount Chassis
 Chassis Part Number   :
 Chassis Serial        :
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Inventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194504
 Board Extra           :  X02
 Product Manufacturer  : Inventec
 Product Name          : TRANSFORMERS
 Product Part Number   :
 Product Version       :
 Product Serial        :
 Product Asset Tag     :
 Product Extra         :

FRU Device Description : TRANSFORMERS     (ID 1)
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : INVENTEC
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04

FRU Device Description : TRANSFORMERS     (ID 2)
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Inventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04

- fru read
sysadmin@transformers:~# ipmitool fru read 1 test2.bin
Fru Size         : 2048 bytes
Done
sysadmin@transformers:~# hexdump -C test2.bin
00000000  01 00 00 01 00 00 00 fe  01 0f 00 ef f2 c8 d8 49  |...............I|
00000010  6e 76 65 6e 74 65 63 20  20 20 20 20 20 20 20 20  |nventec         |
00000020  20 20 20 20 20 20 20 d8  54 52 41 4e 53 46 4f 52  |       .TRANSFOR|
00000030  4d 45 52 53 20 20 20 20  20 20 20 20 20 20 20 20  |MERS            |
00000040  d8 20 20 20 20 20 20 20  20 20 20 20 20 20 20 20  |.               |
00000050  20 20 20 20 20 20 20 20  20 d4 31 33 39 35 41 33  |         .1395A3|
00000060  31 39 34 37 30 31 20 20  20 20 20 20 20 20 c9 20  |194701        . |
00000070  20 20 20 20 20 20 20 20  c4 20 58 30 34 c1 00 c3  |        . X04...|
00000080  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
00000800

- fru edit
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Inventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
sysadmin@transformers:~# ipmitool fru edit 1 field b 0 INVENTEC
String size are not equal, resizing fru to fit new string
Read All FRU area
(skip)
Done.
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : INVENTEC
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
sysadmin@transformers:~#

- fru write
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : INVENTEC
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
sysadmin@transformers:~# ipmitool fru write 1 Transformers_RunBMC_A3194701_fru_v02_20210114_CRC32_A81E7ACC.bin
Fru Size         : 2048 bytes
Size to Write    : 128 bytes
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Inventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
sysadmin@transformers:~#

- fru size ( raw command )
sysadmin@transformers:~# ipmitool raw 0xa 0x10 0
 00 08 00

- fru read ( raw command )
sysadmin@transformers:~# ipmitool raw 0xa 0x11 0x1 0x0 0x0 0xff
 ff 01 00 00 01 00 00 00 fe 01 0f 00 ef f2 c8 d8
 49 6e 76 65 6e 74 65 63 20 20 20 20 20 20 20 20
 20 20 20 20 20 20 20 20 d8 54 52 41 4e 53 46 4f
 52 4d 45 52 53 20 20 20 20 20 20 20 20 20 20 20
 20 d8 20 20 20 20 20 20 20 20 20 20 20 20 20 20
 20 20 20 20 20 20 20 20 20 20 d4 31 33 39 35 41
 33 31 39 34 37 30 31 20 20 20 20 20 20 20 20 c9
 20 20 20 20 20 20 20 20 20 c4 20 58 30 34 c1 00
 c3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

- fru write ( raw command )
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Inventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
sysadmin@transformers:~# ipmitool raw 0xa 0x12 0x1 0xf 0x0 0x50
 00
sysadmin@transformers:~# ipmitool fru print 1
 Board Mfg Date        : Thu Jan 14 09:51:00 2021 UTC
 Board Mfg             : Pnventec
 Board Product         : TRANSFORMERS
 Board Serial          :
 Board Part Number     : 1395A3194701
 Board Extra           :  X04
---
 include/sdrutils.hpp    |  3 +-
 src/storagecommands.cpp | 87 ++++++++++++++++++++++++++++++++++++++++---------
 2 files changed, 74 insertions(+), 16 deletions(-)

diff --git a/include/sdrutils.hpp b/include/sdrutils.hpp
index 697dad3..7154312 100644
--- a/include/sdrutils.hpp
+++ b/include/sdrutils.hpp
@@ -519,7 +519,8 @@ static inline const std::string* getSensorConfigurationInterface(
     {
         if (entry == "xyz.openbmc_project.Configuration.AspeedFan" ||
             entry == "xyz.openbmc_project.Configuration.I2CFan" ||
-            entry == "xyz.openbmc_project.Configuration.NuvotonFan")
+            entry == "xyz.openbmc_project.Configuration.NuvotonFan" ||
+            entry == "xyz.openbmc_project.Configuration.TMP468")
         {
             return &entry;
         }
diff --git a/src/storagecommands.cpp b/src/storagecommands.cpp
index c450b01..9bcc353 100644
--- a/src/storagecommands.cpp
+++ b/src/storagecommands.cpp
@@ -33,6 +33,8 @@
 #include <sdbusplus/message/types.hpp>
 #include <sdbusplus/timer.hpp>
 
+#include <thread>
+
 #include <filesystem>
 #include <functional>
 #include <iostream>
@@ -129,8 +131,12 @@ static uint8_t writeBus = 0xFF;
 static uint8_t writeAddr = 0XFF;
 
 std::unique_ptr<phosphor::Timer> writeTimer = nullptr;
+std::unique_ptr<phosphor::Timer> updateTimer = nullptr;
 static std::vector<sdbusplus::bus::match::match> fruMatches;
 
+static const uint16_t FRU_MAX_SIZE = 0x800;
+static const uint8_t FRU_UPDATE_TIME = 60;
+
 ManagedObjectType frus;
 
 // we unfortunately have to build a map of hashes in case there is a
@@ -159,6 +165,8 @@ bool writeFru()
         // todo: log sel?
         phosphor::logging::log<phosphor::logging::level::ERR>(
             "error writing fru");
+        lastDevId = 0xFF;
+        fruCache.clear();
         return false;
     }
     writeBus = 0xFF;
@@ -209,7 +217,7 @@ void recalculateHashes()
         uint8_t fruHash = 0;
         if (chassisType.compare(chassisTypeRackMount) != 0)
         {
-            fruHash = hasher(fru.first.str);
+            //fruHash = hasher(fru.first.str); 
             // can't be 0xFF based on spec, and 0 is reserved for baseboard
             if (fruHash == 0 || fruHash == 0xFF)
             {
@@ -291,7 +299,7 @@ ipmi::Cc getFru(ipmi::Context::ptr ctx, uint8_t devId)
         cacheAddr = 0xFF;
         return ipmi::ccResponseError;
     }
-
+    fruCache.resize(FRU_MAX_SIZE);
     lastDevId = devId;
     return ipmi::ccSuccess;
 }
@@ -393,6 +401,15 @@ ipmi::RspType<uint8_t,             // Count
         return ipmi::responseInvalidFieldRequest();
     }
 
+    if(writeTimer->isRunning()){
+        writeTimer->stop();
+        if (!writeFru())
+        {
+            fprintf(stderr, "Failed to update fru before read %x %x\n", writeBus, writeAddr);
+        }
+        usleep(500000);
+    }
+
     ipmi::Cc status = getFru(ctx, fruDeviceId);
 
     if (status != ipmi::ccSuccess)
@@ -443,17 +460,13 @@ ipmi::RspType<uint8_t>
     }
 
     size_t writeLen = dataToWrite.size();
-
     ipmi::Cc status = getFru(ctx, fruDeviceId);
     if (status != ipmi::ccSuccess)
     {
+        fprintf(stderr,"failed to get fru %x\n", fruDeviceId);
         return ipmi::response(status);
     }
     int lastWriteAddr = fruInventoryOffset + writeLen;
-    if (fruCache.size() < lastWriteAddr)
-    {
-        fruCache.resize(fruInventoryOffset + writeLen);
-    }
 
     std::copy(dataToWrite.begin(), dataToWrite.begin() + writeLen,
               fruCache.begin() + fruInventoryOffset);
@@ -502,7 +515,7 @@ ipmi::RspType<uint8_t>
                 areaLength *= 8; // it is in multiples of 8 bytes
             }
         }
-        if (lastWriteAddr >= (areaLength + lastRecordStart))
+        if ( (lastWriteAddr >= (areaLength + lastRecordStart)) && (fruInventoryOffset<(areaLength + lastRecordStart)) )
         {
             atEnd = true;
         }
@@ -549,16 +562,10 @@ ipmi::RspType<uint16_t, // inventorySize
         return ipmi::responseInvalidFieldRequest();
     }
 
-    ipmi::Cc ret = getFru(ctx, fruDeviceId);
-    if (ret != ipmi::ccSuccess)
-    {
-        return ipmi::response(ret);
-    }
-
     constexpr uint8_t accessType =
         static_cast<uint8_t>(GetFRUAreaAccessType::byte);
 
-    return ipmi::responseSuccess(fruCache.size(), accessType);
+    return ipmi::responseSuccess(FRU_MAX_SIZE, accessType);
 }
 
 ipmi_ret_t getFruSdrCount(ipmi::Context::ptr ctx, size_t& count)
@@ -1470,15 +1477,65 @@ std::vector<uint8_t> getNMDiscoverySDR(uint16_t index, uint16_t recordId)
     return resp;
 }
 
+bool UpdateFruData(){
+    std::shared_ptr<sdbusplus::asio::connection> dbus = getSdBus();
+
+    sdbusplus::message::message writeFru = dbus->new_method_call(
+        fruDeviceServiceName, "/xyz/openbmc_project/FruDevice",
+        "xyz.openbmc_project.FruDeviceManager", "ReScan");
+    try
+    {
+        sdbusplus::message::message writeFruResp = dbus->call(writeFru);
+    }
+    catch (sdbusplus::exception_t&)
+    {
+        phosphor::logging::log<phosphor::logging::level::ERR>(
+            "error update fru\n");
+        return false;
+    }
+    boost::asio::spawn(*getIoContext(), [](boost::asio::yield_context yield) {
+        replaceCacheFru(getSdBus(), yield);
+    });
+
+    return true;
+}
+
+void createUpdateTimers()
+{
+    updateTimer = std::make_unique<phosphor::Timer>(UpdateFruData);
+    updateTimer->start(std::chrono::duration_cast<std::chrono::microseconds>(
+            std::chrono::seconds(FRU_UPDATE_TIME)));
+}
+
+void checkTimer()
+{
+    while(true){
+        sleep(FRU_UPDATE_TIME);
+        if (updateTimer->isRunning())
+        {
+            continue;
+        }else{
+            updateTimer->start(std::chrono::duration_cast<std::chrono::microseconds>(
+            std::chrono::seconds(FRU_UPDATE_TIME)));
+        }
+    }
+}
+
+
 void registerStorageFunctions()
 {
     createTimers();
     startMatch();
+    createUpdateTimers();
+    std::thread timer_check_thread = std::thread(checkTimer);
+    timer_check_thread.detach();
+
 
     // <Get FRU Inventory Area Info>
     ipmi::registerHandler(ipmi::prioOemBase, ipmi::netFnStorage,
                           ipmi::storage::cmdGetFruInventoryAreaInfo,
                           ipmi::Privilege::User, ipmiStorageGetFruInvAreaInfo);
+    
     // <READ FRU Data>
     ipmi::registerHandler(ipmi::prioOpenBmcBase, ipmi::netFnStorage,
                           ipmi::storage::cmdReadFruData, ipmi::Privilege::User,
-- 
2.7.4

