From 52043c3c53bfb46849494c72220a45f6ccb2b775 Mon Sep 17 00:00:00 2001
From: anonymous <anonymous@inventec.com>
Date: Wed, 20 May 2020 02:28:36 -0400
Subject: [PATCH] Initial-goldentalon-u-boot-dts

---
 arch/arm/dts/Makefile                   |   1 +
 arch/arm/dts/ast2600-goldentalon.dts    | 204 ++++++++++++++++++++++++++++
 arch/arm/dts/ast2600.dtsi               |  18 ++-
 arch/arm/mach-aspeed/ast2600/platform.S |  34 ++++-
 configs/goldentalon-ast2600_defconfig   |  78 +++++++++++
 drivers/net/ftgmac100.c                 | 230 +++++++++++++++++++++-----------
 include/configs/aspeed-common.h         |   6 +-
 include/configs/evb_ast2600a0.h         |   3 +
 8 files changed, 488 insertions(+), 86 deletions(-)
 create mode 100644 arch/arm/dts/ast2600-goldentalon.dts
 create mode 100644 configs/goldentalon-ast2600_defconfig

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index e9d9947..cc620db 100755
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -679,6 +679,7 @@ dtb-$(CONFIG_ARCH_ASPEED) += \
 	ast2500-evb.dtb \
 	ast2600a0-evb.dtb \
 	ast2600a0-ncsi.dtb \
+        ast2600-goldentalon.dtb \
 	ast2600a1-evb.dtb \
 	ast2600a1-ncsi.dtb \
 	ast2600-fpga.dtb \
diff --git a/arch/arm/dts/ast2600-goldentalon.dts b/arch/arm/dts/ast2600-goldentalon.dts
new file mode 100644
index 0000000..e8e477d
--- /dev/null
+++ b/arch/arm/dts/ast2600-goldentalon.dts
@@ -0,0 +1,204 @@
+/dts-v1/;
+
+#include "ast2600-u-boot.dtsi"
+
+/ {
+	memory {
+		device_type = "memory";
+		reg = <0x80000000 0x40000000>;
+	};
+
+	chosen {
+		stdout-path = &uart5;
+	};
+
+	aliases {
+		spi0 = &fmc;
+		spi1 = &spi1;
+		spi2 = &spi2;
+		ethernet1 = &mac0;
+		ethernet2 = &mac2;
+	};
+
+	cpus {
+		cpu@0 {
+			clock-frequency = <800000000>;
+		};
+		cpu@1 {
+			clock-frequency = <800000000>;
+		};
+	};
+};
+
+&uart5 {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
+
+&sdrammc {
+	clock-frequency = <400000000>;
+};
+
+&wdt1 {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
+
+&wdt2 {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
+
+&wdt3 {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
+
+&mdio {
+	status = "okay";
+
+	ethphy1: ethernet-phy@1 {
+		reg = <8>;
+	};
+};
+&mac0 {
+	status = "okay";
+
+	phy-handle = <&ethphy1>;
+	phy-mode = "rgmii";
+	pinctrl-names = "default";
+       pinctrl-0 = <&pinctrl_rgmii1_default &pinctrl_mdio1_default>;
+};
+
+
+&fmc {
+	status = "okay";
+#if 0
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_fmcquad_default>;
+#endif
+	flash@0 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <50000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+
+	flash@1 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+    };
+};
+
+&spi1 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_spi1_default &pinctrl_spi1abr_default
+			&pinctrl_spi1cs1_default &pinctrl_spi1wp_default
+			&pinctrl_spi1wp_default>;
+
+	flash@0 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+
+	flash@1 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+};
+
+&spi2 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_spi2_default &pinctrl_spi2cs1_default
+			&pinctrl_spi2cs2_default &pinctrl_spi2quad_default>;
+
+	flash@0 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+#if 0
+	flash@1 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+
+	flash@2 {
+		compatible = "spi-flash", "sst,w25q256";
+		status = "okay";
+		spi-max-frequency = <33000000>;
+		spi-tx-bus-width = <2>;
+		spi-rx-bus-width = <2>;
+	};
+#endif
+};
+
+#if 0
+&i2c4 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c5_default>;
+};
+
+&i2c5 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c6_default>;
+};
+
+&i2c6 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c7_default>;
+};
+
+&i2c7 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c8_default>;
+};
+
+&i2c8 {
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c9_default>;
+};
+#endif 
+
+&i2c14 {
+        status = "okay";
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&pinctrl_i2c15_default>;
+
+        scm_eeprom@50 {
+                compatible = "atmel,24c128";
+                reg = <0x50>;
+                pagesize = <64>;
+        };
+};
+
diff --git a/arch/arm/dts/ast2600.dtsi b/arch/arm/dts/ast2600.dtsi
index e619f71..3c8b81c 100644
--- a/arch/arm/dts/ast2600.dtsi
+++ b/arch/arm/dts/ast2600.dtsi
@@ -203,7 +203,7 @@
 
 		mac0: ftgmac@1e660000 {
 			compatible = "aspeed,ast2600-mac", "faraday,ftgmac100";
-			reg = <0x1e660000 0x180>, <0x1e650000 0x4>;
+			reg = <0x1e660000 0x180>, <0x1e650000 0x8>;
 			interrupts = <GIC_SPI 2 IRQ_TYPE_LEVEL_HIGH>;
 			clocks = <&scu ASPEED_CLK_GATE_MAC1CLK>;
 			status = "disabled";
@@ -211,7 +211,7 @@
 
 		mac1: ftgmac@1e680000 {
 			compatible = "aspeed,ast2600-mac", "faraday,ftgmac100";
-			reg = <0x1e680000 0x180>, <0x1e650008 0x4>;
+			reg = <0x1e680000 0x180>, <0x1e650008 0x8>;
 			#address-cells = <1>;
 			#size-cells = <0>;
 			interrupts = <GIC_SPI 3 IRQ_TYPE_LEVEL_HIGH>;
@@ -221,7 +221,7 @@
 
 		mac2: ftgmac@1e670000 {
 			compatible = "aspeed,ast2600-mac", "faraday,ftgmac100";
-			reg = <0x1e670000 0x180>, <0x1e650010 0x4>;
+			reg = <0x1e670000 0x180>, <0x1e650010 0x8>;
 			#address-cells = <1>;
 			#size-cells = <0>;
 			interrupts = <GIC_SPI 32 IRQ_TYPE_LEVEL_HIGH>;
@@ -231,7 +231,7 @@
 
 		mac3: ftgmac@1e690000 {
 			compatible = "aspeed,ast2600-mac", "faraday,ftgmac100";
-			reg = <0x1e690000 0x180>, <0x1e650018 0x4>;
+			reg = <0x1e690000 0x180>, <0x1e650018 0x8>;
 			#address-cells = <1>;
 			#size-cells = <0>;
 			interrupts = <GIC_SPI 33 IRQ_TYPE_LEVEL_HIGH>;
@@ -1619,6 +1619,16 @@
 		groups = "RMII2";
 	};
 
+        pinctrl_rmii3_default: rmii3_default {
+                function = "RMII3";
+                groups = "RMII3";
+        };
+
+        pinctrl_rmii4_default: rmii4_default {
+                function = "RMII4";
+                groups = "RMII4";
+        };
+
 	pinctrl_rxd1_default: rxd1_default {
 		function = "RXD1";
 		groups = "RXD1";
diff --git a/arch/arm/mach-aspeed/ast2600/platform.S b/arch/arm/mach-aspeed/ast2600/platform.S
index f193c66..f54957f 100644
--- a/arch/arm/mach-aspeed/ast2600/platform.S
+++ b/arch/arm/mach-aspeed/ast2600/platform.S
@@ -45,6 +45,9 @@
 #define AST_SCU_HPLL_PARAM_EXT		(AST_SCU_BASE + 0x204)
 #define AST_SCU_HW_STRAP1		(AST_SCU_BASE + 0x500)
 #define AST_SCU_HW_STRAP2		(AST_SCU_BASE + 0x510)
+#define AST_SCU_CA7_CTRL		(AST_SCU_BASE + 0x800)
+#define AST_SCU_CA7_AXI_PREFETCH_START	(AST_SCU_BASE + 0x808)
+#define AST_SCU_CA7_AXI_PREFETCH_END	(AST_SCU_BASE + 0x80C)
 #define AST_SCU_CA7_PARITY_CHK		(AST_SCU_BASE + 0x820)
 #define AST_SCU_CA7_PARITY_CLR		(AST_SCU_BASE + 0x824)
 #define AST_SCU_MMIO_DEC_SET		(AST_SCU_BASE + 0xC24)
@@ -207,6 +210,20 @@ wait_lock:
 	b 1f
 
 0:
+	/* enable AXI prefetch (A1 only) */
+	ldr	r0, =AST_SCU_CA7_AXI_PREFETCH_START
+	ldr r1, =ASPEED_DRAM_BASE
+	str r1, [r0]
+
+	ldr	r0, =AST_SCU_CA7_AXI_PREFETCH_END
+	ldr	r1, =0xFFFFFFFF
+	str r1, [r0]
+
+	ldr	r0, =AST_SCU_CA7_CTRL
+	ldr	r1, [r0]
+	orr	r1, #0x8000
+	str	r1, [r0]
+
 	/* LPC/eSPI mode selection (A1 only) */
 	ldr	r0, =AST_GPIOYZ_DATA_VALUE
 	ldr	r0, [r0]
@@ -220,6 +237,12 @@ wait_lock:
 	str	r1, [r0]
 
 1:
+	/* release display port reset */
+	ldr	r0, =AST_SCU_SYSRST_CTRL_CLR
+	movw	r1, #0x0000
+	movt	r1, #0x3000
+	str	r1, [r0]
+
 	/* MMIO decode setting */
 	ldr	r0, =AST_SCU_MMIO_DEC_SET
 	mov	r1, #0x2000
@@ -261,8 +284,16 @@ skip_fill_wip_bit:
 	mov	r0, #0
 	ldr	r1, =AST_FMC_WDT1_CTRL_MODE
 	str	r0, [r1]
-
 #if 0
+	ldr	r1, =AST_FMC_WDT2_CTRL_MODE
+	str	r0, [r1]
+#endif
+	/* tune up SPI clock */
+	movw	r0, #0x0641
+	movt	r0, #0x203B
+	ldr	r1, =AST_FMC_CE0_CTRL
+	str	r0, [r1]
+
 	/* disable UART-based SoC Debug Interface UART5 and P2A bridge*/
 	ldr     r0, =AST_SCU_DEBUG_CTRL
 	ldr     r1, [r0]
@@ -274,7 +305,6 @@ skip_fill_wip_bit:
 	ldr     r1, [r0]
 	orr     r1, #0x0A
 	str     r1, [r0]
-#endif
 
 	/* relocate mailbox insn. for cpuN polling SMP go signal */
 	adrl	r0, mailbox_insn
diff --git a/configs/goldentalon-ast2600_defconfig b/configs/goldentalon-ast2600_defconfig
new file mode 100644
index 0000000..7c7a8b0
--- /dev/null
+++ b/configs/goldentalon-ast2600_defconfig
@@ -0,0 +1,78 @@
+CONFIG_ARM=y
+CONFIG_ARCH_ASPEED=y
+CONFIG_SYS_TEXT_BASE=0x0
+CONFIG_ASPEED_AST2600=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_ENV_SIZE=0x10000
+CONFIG_ENV_OFFSET=0xE0000
+CONFIG_ARMV7_BOOT_SEC_DEFAULT=y
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_FIT=y
+CONFIG_RAM=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="console=ttyS4,115200n8 root=/dev/ram rw mem.devmem=1"
+CONFIG_PRE_CONSOLE_BUFFER=y
+CONFIG_PRE_CON_BUF_ADDR=0x10000000
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+CONFIG_ARCH_EARLY_INIT_R=y
+CONFIG_HUSH_PARSER=y
+# CONFIG_AUTO_COMPLETE is not set
+CONFIG_SYS_PROMPT="ast# "
+CONFIG_CMD_MEMTEST=y
+CONFIG_SYS_ALT_MEMTEST=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_SF=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_DEFAULT_DEVICE_TREE="ast2600-goldentalon"
+CONFIG_ENV_IS_IN_SPI_FLASH=y
+CONFIG_USE_ENV_SPI_BUS=y
+CONFIG_ENV_SPI_BUS=0
+CONFIG_USE_ENV_SPI_CS=y
+CONFIG_ENV_SPI_CS=0
+CONFIG_USE_ENV_SPI_MAX_HZ=y
+CONFIG_ENV_SPI_MAX_HZ=100000000
+CONFIG_NET_RANDOM_ETHADDR=y
+CONFIG_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_CLK=y
+CONFIG_DM_GPIO=y
+CONFIG_ASPEED_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_ASPEED=y
+CONFIG_MISC=y
+CONFIG_ASPEED_AHBC=y
+CONFIG_ASPEED_H2X=y
+CONFIG_DM_MMC=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_ASPEED=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_GIGADEVICE=y
+CONFIG_SPI_FLASH_MACRONIX=y
+CONFIG_SPI_FLASH_SPANSION=y
+CONFIG_SPI_FLASH_STMICRO=y
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_PHY_BROADCOM=y
+CONFIG_PHY_REALTEK=y
+CONFIG_DM_ETH=y
+CONFIG_FTGMAC100=y
+CONFIG_MDIO=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_DM_PCI_COMPAT=y
+CONFIG_PCIE_ASPEED=n
+CONFIG_PHY=y
+CONFIG_PINCTRL=y
+CONFIG_DM_SERIAL=y
+CONFIG_SYS_NS16550=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_SYSRESET=y
+CONFIG_WDT=y
+CONFIG_DM_I2C_COMPAT=y
diff --git a/drivers/net/ftgmac100.c b/drivers/net/ftgmac100.c
index 999941d..d95d2b7 100644
--- a/drivers/net/ftgmac100.c
+++ b/drivers/net/ftgmac100.c
@@ -19,36 +19,38 @@
 #include <linux/io.h>
 #include <linux/iopoll.h>
 #include <net/ncsi.h>
+#include <i2c.h>
 
 #include "ftgmac100.h"
 #include "aspeed_mdio.h"
 
 /* Min frame ethernet frame size without FCS */
-#define ETH_ZLEN			60
+#define ETH_ZLEN 60
 
 /* Receive Buffer Size Register - HW default is 0x640 */
-#define FTGMAC100_RBSR_DEFAULT		0x640
+#define FTGMAC100_RBSR_DEFAULT 0x640
 
 /* PKTBUFSTX/PKTBUFSRX must both be power of 2 */
-#define PKTBUFSTX	4	/* must be power of 2 */
+#define PKTBUFSTX 4 /* must be power of 2 */
 
 /* Timeout for transmit */
-#define FTGMAC100_TX_TIMEOUT_MS		1000
+#define FTGMAC100_TX_TIMEOUT_MS 1000
 
 /* Timeout for a mdio read/write operation */
-#define FTGMAC100_MDIO_TIMEOUT_USEC	10000
+#define FTGMAC100_MDIO_TIMEOUT_USEC 10000
 
 /*
  * MDC clock cycle threshold
  *
  * 20us * 100 = 2ms > (1 / 2.5Mhz) * 0x34
  */
-#define MDC_CYCTHR			0x34
+#define MDC_CYCTHR 0x34
 
 /*
  * ftgmac100 model variants
  */
-enum ftgmac100_model {
+enum ftgmac100_model
+{
 	FTGMAC100_MODEL_FARADAY,
 	FTGMAC100_MODEL_ASPEED,
 	FTGMAC100_MODEL_NEW_ASPEED,
@@ -71,9 +73,10 @@ enum ftgmac100_model {
  * @rxdes0_edorr_mask: The bit number identifying the end of the RX ring buffer
  * @txdes0_edotr_mask: The bit number identifying the end of the TX ring buffer
  */
-struct ftgmac100_data {
+struct ftgmac100_data
+{
 	struct ftgmac100 *iobase;
-	fdt_addr_t mdio_addr;	//for aspeed ast2600 new mdio
+	fdt_addr_t mdio_addr; //for aspeed ast2600 new mdio
 
 	struct ftgmac100_txdes txdes[PKTBUFSTX];
 	struct ftgmac100_rxdes rxdes[PKTBUFSRX];
@@ -98,7 +101,7 @@ struct ftgmac100_data {
  * struct mii_bus functions
  */
 static int ftgmac100_mdio_read(struct mii_dev *bus, int phy_addr, int dev_addr,
-			       int reg_addr)
+							   int reg_addr)
 {
 	struct ftgmac100_data *priv = bus->priv;
 	struct ftgmac100 *ftgmac100 = priv->iobase;
@@ -107,17 +110,18 @@ static int ftgmac100_mdio_read(struct mii_dev *bus, int phy_addr, int dev_addr,
 	int ret;
 
 	phycr = FTGMAC100_PHYCR_MDC_CYCTHR(MDC_CYCTHR) |
-		FTGMAC100_PHYCR_PHYAD(phy_addr) |
-		FTGMAC100_PHYCR_REGAD(reg_addr) |
-		FTGMAC100_PHYCR_MIIRD;
+			FTGMAC100_PHYCR_PHYAD(phy_addr) |
+			FTGMAC100_PHYCR_REGAD(reg_addr) |
+			FTGMAC100_PHYCR_MIIRD;
 	writel(phycr, &ftgmac100->phycr);
 
 	ret = readl_poll_timeout(&ftgmac100->phycr, phycr,
-				 !(phycr & FTGMAC100_PHYCR_MIIRD),
-				 FTGMAC100_MDIO_TIMEOUT_USEC);
-	if (ret) {
+							 !(phycr & FTGMAC100_PHYCR_MIIRD),
+							 FTGMAC100_MDIO_TIMEOUT_USEC);
+	if (ret)
+	{
 		pr_err("%s: mdio read failed (phy:%d reg:%x)\n",
-		       priv->phydev->dev->name, phy_addr, reg_addr);
+			   priv->phydev->dev->name, phy_addr, reg_addr);
 		return ret;
 	}
 
@@ -127,7 +131,7 @@ static int ftgmac100_mdio_read(struct mii_dev *bus, int phy_addr, int dev_addr,
 }
 
 static int ftgmac100_mdio_write(struct mii_dev *bus, int phy_addr, int dev_addr,
-				int reg_addr, u16 value)
+								int reg_addr, u16 value)
 {
 	struct ftgmac100_data *priv = bus->priv;
 	struct ftgmac100 *ftgmac100 = priv->iobase;
@@ -136,20 +140,21 @@ static int ftgmac100_mdio_write(struct mii_dev *bus, int phy_addr, int dev_addr,
 	int ret;
 
 	phycr = FTGMAC100_PHYCR_MDC_CYCTHR(MDC_CYCTHR) |
-		FTGMAC100_PHYCR_PHYAD(phy_addr) |
-		FTGMAC100_PHYCR_REGAD(reg_addr) |
-		FTGMAC100_PHYCR_MIIWR;
+			FTGMAC100_PHYCR_PHYAD(phy_addr) |
+			FTGMAC100_PHYCR_REGAD(reg_addr) |
+			FTGMAC100_PHYCR_MIIWR;
 	data = FTGMAC100_PHYDATA_MIIWDATA(value);
 
 	writel(data, &ftgmac100->phydata);
 	writel(phycr, &ftgmac100->phycr);
 
 	ret = readl_poll_timeout(&ftgmac100->phycr, phycr,
-				 !(phycr & FTGMAC100_PHYCR_MIIWR),
-				 FTGMAC100_MDIO_TIMEOUT_USEC);
-	if (ret) {
+							 !(phycr & FTGMAC100_PHYCR_MIIWR),
+							 FTGMAC100_MDIO_TIMEOUT_USEC);
+	if (ret)
+	{
 		pr_err("%s: mdio write failed (phy:%d reg:%x)\n",
-		       priv->phydev->dev->name, phy_addr, reg_addr);
+			   priv->phydev->dev->name, phy_addr, reg_addr);
 	}
 
 	return ret;
@@ -165,18 +170,22 @@ static int ftgmac100_mdio_init(struct udevice *dev)
 	if (!bus)
 		return -ENOMEM;
 
-	if(priv->mdio_addr) {
-		bus->read  = aspeed_mdio_read;
+	if (priv->mdio_addr)
+	{
+		bus->read = aspeed_mdio_read;
 		bus->write = aspeed_mdio_write;
-		bus->priv  = (void *)priv->mdio_addr;
-	} else {
-		bus->read  = ftgmac100_mdio_read;
+		bus->priv = (void *)priv->mdio_addr;
+	}
+	else
+	{
+		bus->read = ftgmac100_mdio_read;
 		bus->write = ftgmac100_mdio_write;
-		bus->priv  = priv;
+		bus->priv = priv;
 	}
 
 	ret = mdio_register_seq(bus, dev->seq);
-	if (ret) {
+	if (ret)
+	{
 		free(bus);
 		return ret;
 	}
@@ -199,9 +208,9 @@ static int ftgmac100_phy_adjust_link(struct ftgmac100_data *priv)
 
 	/* read MAC control register and clear related bits */
 	maccr = readl(&ftgmac100->maccr) &
-		~(FTGMAC100_MACCR_GIGA_MODE |
-		  FTGMAC100_MACCR_FAST_MODE |
-		  FTGMAC100_MACCR_FULLDUP);
+			~(FTGMAC100_MACCR_GIGA_MODE |
+			  FTGMAC100_MACCR_FAST_MODE |
+			  FTGMAC100_MACCR_FULLDUP);
 
 	if (phy_interface_is_rgmii(phydev) && phydev->speed == 1000)
 		maccr |= FTGMAC100_MACCR_GIGA_MODE;
@@ -261,7 +270,7 @@ static void ftgmac100_reset(struct ftgmac100_data *priv)
  * Set MAC address
  */
 static int ftgmac100_set_mac(struct ftgmac100_data *priv,
-			     const unsigned char *mac)
+							 const unsigned char *mac)
 {
 	struct ftgmac100 *ftgmac100 = priv->iobase;
 	unsigned int maddr = mac[0] << 8 | mac[1];
@@ -318,7 +327,8 @@ static int ftgmac100_start(struct udevice *dev)
 	priv->tx_index = 0;
 	priv->rx_index = 0;
 
-	for (i = 0; i < PKTBUFSTX; i++) {
+	for (i = 0; i < PKTBUFSTX; i++)
+	{
 		priv->txdes[i].txdes3 = 0;
 		priv->txdes[i].txdes0 = 0;
 	}
@@ -328,7 +338,8 @@ static int ftgmac100_start(struct udevice *dev)
 	end = start + roundup(sizeof(priv->txdes), ARCH_DMA_MINALIGN);
 	flush_dcache_range(start, end);
 
-	for (i = 0; i < PKTBUFSRX; i++) {
+	for (i = 0; i < PKTBUFSRX; i++)
+	{
 		priv->rxdes[i].rxdes3 = (unsigned int)net_rx_packets[i];
 		priv->rxdes[i].rxdes0 = 0;
 	}
@@ -365,30 +376,32 @@ static int ftgmac100_start(struct udevice *dev)
 
 	/* enable transmitter, receiver */
 	maccr = FTGMAC100_MACCR_TXMAC_EN |
-		FTGMAC100_MACCR_RXMAC_EN |
-		FTGMAC100_MACCR_TXDMA_EN |
-		FTGMAC100_MACCR_RXDMA_EN |
-		FTGMAC100_MACCR_CRC_APD |
-		FTGMAC100_MACCR_FULLDUP |
-		FTGMAC100_MACCR_RX_RUNT |
-		FTGMAC100_MACCR_RX_BROADPKT;
+			FTGMAC100_MACCR_RXMAC_EN |
+			FTGMAC100_MACCR_TXDMA_EN |
+			FTGMAC100_MACCR_RXDMA_EN |
+			FTGMAC100_MACCR_CRC_APD |
+			FTGMAC100_MACCR_FULLDUP |
+			FTGMAC100_MACCR_RX_RUNT |
+			FTGMAC100_MACCR_RX_BROADPKT;
 
 	writel(maccr, &ftgmac100->maccr);
 
 	ret = phy_startup(phydev);
-	if (ret) {
+	if (ret)
+	{
 		dev_err(phydev->dev, "Could not start PHY\n");
 		return ret;
 	}
 
 	ret = ftgmac100_phy_adjust_link(priv);
-	if (ret) {
-		dev_err(phydev->dev,  "Could not adjust link\n");
+	if (ret)
+	{
+		dev_err(phydev->dev, "Could not adjust link\n");
 		return ret;
 	}
 
 	printf("%s: link up, %d Mbps %s-duplex mac:%pM\n", phydev->dev->name,
-	       phydev->speed, phydev->duplex ? "full" : "half", plat->enetaddr);
+		   phydev->speed, phydev->duplex ? "full" : "half", plat->enetaddr);
 
 	return 0;
 }
@@ -399,7 +412,7 @@ static int ftgmac100_free_pkt(struct udevice *dev, uchar *packet, int length)
 	struct ftgmac100_rxdes *curr_des = &priv->rxdes[priv->rx_index];
 	ulong des_start = (ulong)curr_des;
 	ulong des_end = des_start +
-		roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
+					roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
 
 	/* Release buffer to DMA and flush descriptor */
 	curr_des->rxdes0 &= ~FTGMAC100_RXDES0_RXPKT_RDY;
@@ -421,7 +434,7 @@ static int ftgmac100_recv(struct udevice *dev, int flags, uchar **packetp)
 	unsigned short rxlen;
 	ulong des_start = (ulong)curr_des;
 	ulong des_end = des_start +
-		roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
+					roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
 	ulong data_start = curr_des->rxdes3;
 	ulong data_end;
 
@@ -431,17 +444,18 @@ static int ftgmac100_recv(struct udevice *dev, int flags, uchar **packetp)
 		return -EAGAIN;
 
 	if (curr_des->rxdes0 & (FTGMAC100_RXDES0_RX_ERR |
-				FTGMAC100_RXDES0_CRC_ERR |
-				FTGMAC100_RXDES0_FTL |
-				FTGMAC100_RXDES0_RUNT |
-				FTGMAC100_RXDES0_RX_ODD_NB)) {
+							FTGMAC100_RXDES0_CRC_ERR |
+							FTGMAC100_RXDES0_FTL |
+							FTGMAC100_RXDES0_RUNT |
+							FTGMAC100_RXDES0_RX_ODD_NB))
+	{
 		return -EAGAIN;
 	}
 
 	rxlen = FTGMAC100_RXDES0_VDBC(curr_des->rxdes0);
 
 	debug("%s(): RX buffer %d, %x received\n",
-	       __func__, priv->rx_index, rxlen);
+		  __func__, priv->rx_index, rxlen);
 
 	/* Invalidate received data */
 	data_end = data_start + roundup(rxlen, ARCH_DMA_MINALIGN);
@@ -474,14 +488,15 @@ static int ftgmac100_send(struct udevice *dev, void *packet, int length)
 	struct ftgmac100_txdes *curr_des = &priv->txdes[priv->tx_index];
 	ulong des_start = (ulong)curr_des;
 	ulong des_end = des_start +
-		roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
+					roundup(sizeof(*curr_des), ARCH_DMA_MINALIGN);
 	ulong data_start;
 	ulong data_end;
 	int rc;
 
 	invalidate_dcache_range(des_start, des_end);
 
-	if (curr_des->txdes0 & FTGMAC100_TXDES0_TXDMA_OWN) {
+	if (curr_des->txdes0 & FTGMAC100_TXDES0_TXDMA_OWN)
+	{
 		dev_err(dev, "no TX descriptor available\n");
 		return -EPERM;
 	}
@@ -500,9 +515,9 @@ static int ftgmac100_send(struct udevice *dev, void *packet, int length)
 	/* Only one segment on TXBUF */
 	curr_des->txdes0 &= priv->txdes0_edotr_mask;
 	curr_des->txdes0 |= FTGMAC100_TXDES0_FTS |
-			    FTGMAC100_TXDES0_LTS |
-			    FTGMAC100_TXDES0_TXBUF_SIZE(length) |
-			    FTGMAC100_TXDES0_TXDMA_OWN ;
+						FTGMAC100_TXDES0_LTS |
+						FTGMAC100_TXDES0_TXBUF_SIZE(length) |
+						FTGMAC100_TXDES0_TXDMA_OWN;
 
 	/* Flush modified buffer descriptor */
 	flush_dcache_range(des_start, des_end);
@@ -511,8 +526,8 @@ static int ftgmac100_send(struct udevice *dev, void *packet, int length)
 	writel(1, &ftgmac100->txpd);
 
 	rc = wait_for_bit_ftgmac100_txdone(curr_des,
-					   FTGMAC100_TXDES0_TXDMA_OWN, false,
-					   FTGMAC100_TX_TIMEOUT_MS, true);
+									   FTGMAC100_TXDES0_TXDMA_OWN, false,
+									   FTGMAC100_TX_TIMEOUT_MS, true);
 	if (rc)
 		return rc;
 
@@ -545,7 +560,8 @@ static int ftgmac100_ofdata_to_platdata(struct udevice *dev)
 
 	if (phy_mode)
 		pdata->phy_interface = phy_get_interface_by_name(phy_mode);
-	if (pdata->phy_interface == -1) {
+	if (pdata->phy_interface == -1)
+	{
 		dev_err(dev, "Invalid PHY interface '%s'\n", phy_mode);
 		return -EINVAL;
 	}
@@ -560,16 +576,19 @@ static int ftgmac100_ofdata_to_platdata(struct udevice *dev)
 
 	pdata->max_speed = dev_read_u32_default(dev, "max-speed", 0);
 
-	if (dev_get_driver_data(dev) == FTGMAC100_MODEL_NEW_ASPEED) {
-		priv->mdio_addr =  devfdt_get_addr_index(dev, 1);
+	if (dev_get_driver_data(dev) == FTGMAC100_MODEL_NEW_ASPEED)
+	{
+		priv->mdio_addr = devfdt_get_addr_index(dev, 1);
 		debug("priv->mdio_addr %x \n", (u32)priv->mdio_addr);
-
 	}
 	if ((dev_get_driver_data(dev) == FTGMAC100_MODEL_ASPEED) ||
-		(dev_get_driver_data(dev) == FTGMAC100_MODEL_NEW_ASPEED)){
+		(dev_get_driver_data(dev) == FTGMAC100_MODEL_NEW_ASPEED))
+	{
 		priv->rxdes0_edorr_mask = BIT(30);
 		priv->txdes0_edotr_mask = BIT(30);
-	} else {
+	}
+	else
+	{
 		priv->rxdes0_edorr_mask = BIT(15);
 		priv->txdes0_edotr_mask = BIT(15);
 	}
@@ -577,6 +596,50 @@ static int ftgmac100_ofdata_to_platdata(struct udevice *dev)
 	return clk_get_bulk(dev, &priv->clks);
 }
 
+int set_eth_mac_env(unsigned char *mac)
+{
+	uchar addr[6];
+	int i = 0;
+	uchar temp_addr[6] = {0x00, 0x03, 0xff, 0x00, 0x00, 0xcc};
+	u32 reg;
+
+	//printf("set_eth_mac_env\n");
+	//printf("eth MAC: %02x:%02x:%02x:%02x:%02x:%02x\n", mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+
+	i2c_set_bus_num(14);					// EEPROM_I2C_BUS
+	i2c_init(100000, 0x50);					// EEPROM_ADDRESS
+	i2c_read(0x50, 0x1000, 2, &addr[0], 6); // read MAC from EEPROM
+	/* Debug print
+	for( i = 0; i < 6; i++) {
+		printf(" addr[%d]=0x%02x\n",i, addr[i]);
+	}
+	*/
+
+	if (is_valid_ethaddr(&addr[0]))
+	{
+		eth_env_set_enetaddr("ethaddr", addr);
+		memcpy(mac, addr, sizeof(addr));
+	}
+	else
+	{
+		printf("Invalid EEPROM data\n");
+		if (eth_env_get_enetaddr("ethaddr", &addr[0]))
+		{
+			printf("Set env MAC\n");
+			memcpy(mac, addr, sizeof(addr));
+		}
+		else
+		{
+			printf("Set default MAC\n");
+			eth_env_set_enetaddr("ethaddr", temp_addr);
+			memcpy(mac, temp_addr, sizeof(temp_addr));
+		}
+	}
+
+	printf("After eth MAC: %02x:%02x:%02x:%02x:%02x:%02x\n", mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+	return 0;
+}
+
 static int ftgmac100_probe(struct udevice *dev)
 {
 	struct eth_pdata *pdata = dev_get_platdata(dev);
@@ -592,6 +655,14 @@ static int ftgmac100_probe(struct udevice *dev)
 	priv->phy_mode = pdata->phy_interface;
 	priv->max_speed = pdata->max_speed;
 
+	//-printf("\nBASE: 0x%X\n", priv->iobase);
+	if (priv->iobase == 0x1e660000)
+	{
+		// For 1st MAC controller
+		printf("\nUpdate eth MAC\n");
+		set_eth_mac_env(pdata->enetaddr);
+	}
+
 	ret = clk_enable_bulk(&priv->clks);
 	if (ret)
 		goto out;
@@ -608,7 +679,8 @@ static int ftgmac100_probe(struct udevice *dev)
 	}
 
 	ret = ftgmac100_phy_init(dev);
-	if (ret) {
+	if (ret)
+	{
 		dev_err(dev, "Failed to initialize PHY: %d\n", ret);
 		goto out;
 	}
@@ -637,10 +709,10 @@ static int ftgmac100_remove(struct udevice *dev)
 }
 
 static const struct eth_ops ftgmac100_ops = {
-	.start	= ftgmac100_start,
-	.send	= ftgmac100_send,
-	.recv	= ftgmac100_recv,
-	.stop	= ftgmac100_stop,
+	.start = ftgmac100_start,
+	.send = ftgmac100_send,
+	.recv = ftgmac100_recv,
+	.stop = ftgmac100_stop,
 	.free_pkt = ftgmac100_free_pkt,
 	.write_hwaddr = ftgmac100_write_hwaddr,
 };
@@ -654,14 +726,14 @@ static const struct udevice_id ftgmac100_ids[] = {
 };
 
 U_BOOT_DRIVER(ftgmac100) = {
-	.name	= "ftgmac100",
-	.id	= UCLASS_ETH,
+	.name = "ftgmac100",
+	.id = UCLASS_ETH,
 	.of_match = ftgmac100_ids,
 	.ofdata_to_platdata = ftgmac100_ofdata_to_platdata,
-	.probe	= ftgmac100_probe,
+	.probe = ftgmac100_probe,
 	.remove = ftgmac100_remove,
-	.ops	= &ftgmac100_ops,
+	.ops = &ftgmac100_ops,
 	.priv_auto_alloc_size = sizeof(struct ftgmac100_data),
 	.platdata_auto_alloc_size = sizeof(struct eth_pdata),
-	.flags	= DM_FLAG_ALLOC_PRIV_DMA,
+	.flags = DM_FLAG_ALLOC_PRIV_DMA,
 };
diff --git a/include/configs/aspeed-common.h b/include/configs/aspeed-common.h
index 8769587..e1b5b93 100755
--- a/include/configs/aspeed-common.h
+++ b/include/configs/aspeed-common.h
@@ -11,7 +11,7 @@
 
 #include <asm/arch/platform.h>
 
-#define CONFIG_BOOTFILE		"all.bin"
+#define CONFIG_BOOTFILE		"image-bmc"
 
 #define CONFIG_GATEWAYIP	192.168.0.1
 #define CONFIG_NETMASK		255.255.255.0
@@ -55,6 +55,10 @@
 /*
  * Miscellaneous configurable options
  */
+#ifndef CONFIG_BOOTCOMMAND
+#define CONFIG_BOOTCOMMAND		"bootm 20100000"
+#endif
+
 #define CONFIG_SYS_BOOTM_LEN 		(0x800000 * 2)
 
 #define CONFIG_EXTRA_ENV_SETTINGS \
diff --git a/include/configs/evb_ast2600a0.h b/include/configs/evb_ast2600a0.h
index 4592c85..f30bdc1 100644
--- a/include/configs/evb_ast2600a0.h
+++ b/include/configs/evb_ast2600a0.h
@@ -16,4 +16,7 @@
 /* Memory Info */
 #define CONFIG_SYS_LOAD_ADDR		0x83000000
 
+/* Environment */
+#define CONFIG_ENV_SECT_SIZE		(4 << 10)
+
 #endif	/* __CONFIG_H */
-- 
2.7.4

